import React, { useEffect, useMemo } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { FETCH_REPORT_HISTORY } from '../../../actions/reports/ActionCreators';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
} from '@mui/material';

const ReportHistory = ({ open, onClose, inmateId }) => {
  const dispatch = useDispatch();
  const reportHistory = useSelector((state) => state.ReportReducer?.reportHistory || []);
  const error = useSelector((state) => state.ReportReducer?.error || null);

  useEffect(() => {
    if (open && inmateId) {
      dispatch(FETCH_REPORT_HISTORY(inmateId));
    }
  }, [open, inmateId, dispatch]);

  const getFileName = (filePath) => {
    return filePath ? filePath.split('\\').pop() : 'N/A';
  };

  return (
    <Dialog open={open} onClose={onClose} fullWidth maxWidth="md">
      <DialogTitle>Report History</DialogTitle>
      <DialogContent>
        {error && <Typography color="error">{error}</Typography>}
        {reportHistory && reportHistory.length > 0 ? (
          <TableContainer component={Paper}>
            <Table>
              <TableHead>
                <TableRow>
                  <TableCell><strong>File Name</strong></TableCell>
                  <TableCell><strong>Report Type</strong></TableCell>
                  <TableCell><strong>Generated By</strong></TableCell>
                  <TableCell><strong>Generated On</strong></TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {reportHistory.map((report) => (
                  <TableRow key={report._id}>
                    <TableCell>{getFileName(report.reportFilePath)}</TableCell>
                    <TableCell>{report.reportType || 'Unknown'}</TableCell>
                    <TableCell>
                      {report.generatedBy?.firstname || 'N/A'} {report.generatedBy?.lastname || 'N/A'}
                    </TableCell>
                    <TableCell>
                      {report.generatedAt ? new Date(report.generatedAt).toLocaleString() : 'Unknown'}
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        ) : (
          <Typography>No report history available.</Typography>
        )}
      </DialogContent>
      <DialogActions>
        <Button onClick={onClose} color="primary">
          Close
        </Button>
      </DialogActions>
    </Dialog>
  );
};

export default ReportHistory;
